<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hi! I&#39;m Thibault ROHMER</title>
    <link>https://titi.github.io/posts/</link>
    <description>Recent content in Posts on Hi! I&#39;m Thibault ROHMER</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>thibault.rohmer@gmail.com (Thibault ROHMER)</managingEditor>
    <webMaster>thibault.rohmer@gmail.com (Thibault ROHMER)</webMaster>
    <lastBuildDate>Wed, 26 Nov 2014 10:38:00 +0100</lastBuildDate>
    <atom:link href="https://titi.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Redis</title>
      <link>https://titi.github.io/2014/11/redis/</link>
      <pubDate>Wed, 26 Nov 2014 10:38:00 +0100</pubDate>
      <author>thibault.rohmer@gmail.com (Thibault ROHMER)</author>
      <guid>https://titi.github.io/2014/11/redis/</guid>
      <description>

&lt;h1 id=&#34;discover&#34;&gt;Discover&lt;/h1&gt;

&lt;p&gt;Collection of &lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt; tutorials&lt;/p&gt;

&lt;p&gt;Note: In 30min-1H reading, you should have a good idea of what is Redis and how data is manipulated.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://matt.sh/thinking-in-redis-part-one&#34;&gt;Thinking In Redis (part one)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://openmymind.net/2011/11/8/Redis-Zero-To-Master-In-30-Minutes-Part-1/&#34;&gt;Redis: Zero to Master in 30 minutes - Part 1&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://openmymind.net/2011/11/8/Redis-Zero-To-Master-In-30-Minutes-Part-2/&#34;&gt;Redis: Zero to Master in 30 minutes - Part 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://openmymind.net/redis.pdf&#34;&gt;The Little Redis Book&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Videos :&lt;br /&gt;
&lt;span class=&#34;genericon genericon-youtube&#34;&gt;&lt;/span&gt; &lt;a href=&#34;https://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=CoQcNgfPYPc#t=265&#34;&gt;Why and When You Should Use Redis&lt;/a&gt;&lt;br /&gt;
&lt;span class=&#34;genericon genericon-youtube&#34;&gt;&lt;/span&gt; &lt;a href=&#34;https://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=CoQcNgfPYPc#t=1080&#34;&gt;Production problem example&lt;/a&gt;&lt;br /&gt;
&lt;span class=&#34;genericon genericon-youtube&#34;&gt;&lt;/span&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=RNLJsjzRa4Y&#34;&gt;Using PostgreSQL with Redis&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;specifics&#34;&gt;Specifics&lt;/h1&gt;

&lt;p&gt;Recommendations :&lt;br /&gt;
&lt;a href=&#34;https://redislabs.com/blog/5-key-takeaways-for-developing-with-redis&#34;&gt;5 Key Takeaways for Developing with Redis&lt;/a&gt;
&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Redis_Tips&#34;&gt;Redis Tips&lt;/a&gt; (Mozilla)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/vCoreDump/getting-startedwithredis&#34;&gt;Getting Started with Redis&lt;/a&gt; (by vmware, which was sponsor)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;December 1, 2014 9:53am&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.mjrusso.com/2010/10/17/redis-from-the-ground-up.html&#34;&gt;Redis, from the Ground Up&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://redis-docs.readthedocs.org/en/latest/&#34;&gt;https://redis-docs.readthedocs.org/en/latest/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.rediscookbook.org/&#34;&gt;http://www.rediscookbook.org/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://redis.io/&#34;&gt;http://redis.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://try.redis.io/&#34;&gt;http://try.redis.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.parleys.com/play/535e4ed8e4b03397a8eee8d4&#34;&gt;https://www.parleys.com/play/535e4ed8e4b03397a8eee8d4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;browser&#34;&gt;Browser&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://joeferner.github.io/redis-commander/&#34;&gt;http://joeferner.github.io/redis-commander/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://redisdesktop.com/&#34;&gt;http://redisdesktop.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;persistence&#34;&gt;Persistence&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://redis.io/commands/expire&#34;&gt;http://redis.io/commands/expire&lt;/a&gt; (cache expiration &amp;amp; sliding timeout)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://redis.io/topics/persistence&#34;&gt;http://redis.io/topics/persistence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fr.slideshare.net/eugef/redis-persistence-in-practice-1&#34;&gt;http://fr.slideshare.net/eugef/redis-persistence-in-practice-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.sensible.io/2013/08/20/setting-up-redis-for-production-environment.html&#34;&gt;http://blog.sensible.io/2013/08/20/setting-up-redis-for-production-environment.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, RDB persistence (by snapshots) is activated with several criterias:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;################################ SNAPSHOTTING  #################################
#
# Save the DB on disk:
#
#   save &amp;lt;seconds&amp;gt; &amp;lt;changes&amp;gt;
#
#   Will save the DB if both the given number of seconds and the given
#   number of write operations against the DB occurred.
#
#   In the example below the behaviour will be to save:
#   after 900 sec (15 min) if at least 1 key changed
#   after 300 sec (5 min) if at least 10 keys changed
#   after 60 sec if at least 10000 keys changed
#
#   Note: you can disable saving at all commenting all the &amp;quot;save&amp;quot; lines.
#
#   It is also possible to remove all the previously configured save
#   points by adding a save directive with a single empty string argument
#   like in the following example:
#
#   save &amp;quot;&amp;quot;

save 900 1
save 300 10
save 60 10000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But AOF persistance (append-only file: logs) is yet to be activated:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  appendonly yes
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Le tout est sauvé sous /var/lib/redis/ ; cf les paramètres &amp;ldquo;dbfilename&amp;rdquo; et &amp;ldquo;dir&amp;rdquo;&lt;/li&gt;
&lt;li&gt;On peut demander à Redis de sauvegarder MAINTENANT avec la commande &amp;ldquo;&amp;lsquo;BGSAVE&amp;rdquo;&amp;rsquo; (ou &amp;ldquo;&amp;lsquo;SAVE&amp;rdquo;&amp;rsquo;, mais bloquante).&lt;/li&gt;
&lt;li&gt;La commande &lt;strong&gt;LASTSAVE&lt;/strong&gt; donne le timestamp unix de la dernière sauvegarde&lt;/li&gt;
&lt;li&gt;La commande &lt;strong&gt;CONFIG GET *&lt;/strong&gt; permet d&amp;rsquo;avoir tous les paramètre d&amp;rsquo;un coup&lt;/li&gt;
&lt;li&gt;La commande &lt;strong&gt;&lt;a href=&#34;http://redis.io/commands/config-set&#34;&gt;CONFIG SET parameter value&lt;/a&gt;&lt;/strong&gt; permet de changer en live sans redémarrer Redis ; mais ne modifie pas /etc/redis/redis.conf&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Selenium tests in code only and the page object model</title>
      <link>https://titi.github.io/2014/10/selenium-page-object-model/</link>
      <pubDate>Thu, 23 Oct 2014 09:06:00 +0100</pubDate>
      <author>thibault.rohmer@gmail.com (Thibault ROHMER)</author>
      <guid>https://titi.github.io/2014/10/selenium-page-object-model/</guid>
      <description>

&lt;h1 id=&#34;selenium-at-salesforce-scale&#34;&gt;Selenium at Salesforce Scale&lt;/h1&gt;

&lt;p&gt;Webinar &lt;a href=&#34;http://sauceio.com/index.php/2014/04/webinar-selenium-at-salesforce-scale-register-today/&#34;&gt;organised&lt;/a&gt; by &lt;strong&gt;Sauce Labs&lt;/strong&gt; (Selenium in the cloud) Wednesday, April 16th, 2014 at 10:00am PDT.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://saucelabs.com/selenium&#34;&gt;Sauce Labs&lt;/a&gt; hosted webinar with Lead Engineers from Salesforce.com, David Louvton and Sagar Wanaselja, who spoke about Selenium at Salesforce Scale.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.salesforce.com/&#34;&gt;&lt;img src=&#34;http://sauceio.com/wp-content/uploads/2014/04/sfdc-logo-300x213.jpg&#34; alt=&#34;Salesforce&#34; /&gt;&lt;/a&gt; + &lt;a href=&#34;https://saucelabs.com/&#34;&gt;&lt;img src=&#34;https://saucelabs.com/images/sauce-labs-logo.png&#34; alt=&#34;SauceLabs&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://sauceio.com/index.php/2014/04/selenium-at-saleforce-scale-webinar-slides-and-recording/&#34;&gt;Webinar Recording&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/saucelabs/salesforce-seleniumsaucelabswebinarapril2014&#34;&gt;Webinar Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The page object model starts at slide 12. My notes:&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a software layer between selenium and their [salesforce] tests.&lt;br /&gt;
Specifically, this layer expose classes/methods like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;	myCustomPage.ApproveForm();  
	myPrintDriverPage.typeComment(text);  
	myPortalPage.login(username, password);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tests are only using that api, not immediately the selenium one.&lt;br /&gt;
- Good code reuse&lt;br /&gt;
- Easy maintenance&lt;/p&gt;

&lt;p&gt;Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/selenium/wiki/PageObjects&#34;&gt;https://code.google.com/p/selenium/wiki/PageObjects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://martinfowler.com/bliki/PageObject.html&#34;&gt;http://martinfowler.com/bliki/PageObject.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;how-yahoo-mail-transformed-its-functional-testing-continuous-delivery-process&#34;&gt;How Yahoo! Mail Transformed Its Functional Testing + Continuous Delivery Process&lt;/h1&gt;

&lt;p&gt;Webinar &lt;a href=&#34;http://info.saucelabs.com/YahooMail_SauceLabs_WebinarRegLP.html&#34;&gt;organised&lt;/a&gt; by &lt;strong&gt;Sauce Labs&lt;/strong&gt; (Selenium in the cloud) Wednesday, October 22nd, 2014, 11:00am PDT&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&#34;https://saucelabs.com/selenium&#34;&gt;Sauce Labs&lt;/a&gt; hosted webinar with front End Developer Neil Manvar&amp;rsquo;s. His most important contribution to Yahoo! has been developing a modern functional testing framework that is based on open-source technologies, plays well with legacy code, supports many browsers, does not need maintenance, is readable to product managers, and makes writing a pleasure.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://yahoo.com/&#34;&gt;&lt;img src=&#34;http://info.saucelabs.com/rs/saucelabsinc/images/Yahoo-mail-logo-0929.png&#34; alt=&#34;Yahoo!&#34; /&gt;&lt;/a&gt; + &lt;a href=&#34;https://saucelabs.com/&#34;&gt;&lt;img src=&#34;https://saucelabs.com/images/sauce-labs-logo.png&#34; alt=&#34;SauceLabs&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://sauceio.com/index.php/2014/10/how-yahoo-mail-transformed-its-functional-testing-continuous-delivery-process-recap/&#34;&gt;Webinar Recording&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/saucelabs/functional-testing-and-cd-at-yahoo-mail&#34;&gt;Webinar Slides&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;avoiding-random-failures-in-selenium-ui-tests&#34;&gt;Avoiding Random Failures in Selenium UI Tests&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://bocoup.com/weblog/a-day-at-the-races/&#34;&gt;A Day at the Races: Avoiding Random Failures in Selenium UI Tests&lt;/a&gt; - bocoup&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>No defect</title>
      <link>https://titi.github.io/2014/10/no-defect/</link>
      <pubDate>Fri, 17 Oct 2014 15:15:00 +0100</pubDate>
      <author>thibault.rohmer@gmail.com (Thibault ROHMER)</author>
      <guid>https://titi.github.io/2014/10/no-defect/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.fastcompany.com/28121/they-write-right-stuff&#34;&gt;They Write the Right Stuff&lt;/a&gt; - NASA / Software for Grown-Ups&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.klocwork.com/resources/research/research-improving-software-by-reducing-defects/download&#34;&gt;Improving software by reducing coding defects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tenberry.com/errfree/steps.htm&#34;&gt;Nine Steps to Delivering Defect-Free Software&lt;/a&gt;&lt;br /&gt;
(first 3 steps = gold)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.javacodegeeks.com/2014/09/legendary-product-development.html&#34;&gt;Legendary Product Development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cigital.com/whitepapers/dl/Making_Essential_Software_Work.pdf&#34;&gt;Making Essential Software Work&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scalability</title>
      <link>https://titi.github.io/2014/10/scalability/</link>
      <pubDate>Sun, 12 Oct 2014 18:44:00 +0100</pubDate>
      <author>thibault.rohmer@gmail.com (Thibault ROHMER)</author>
      <guid>https://titi.github.io/2014/10/scalability/</guid>
      <description>

&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;

&lt;p&gt;Here are a few links related to scalability, including some from &lt;a href=&#34;http://highscalability.com/&#34;&gt;http://highscalability.com/&lt;/a&gt;, in particular thoses from the &lt;a href=&#34;http://en.wikipedia.org/wiki/Shard_%28database_architecture%29&#34;&gt;Real Life Architectures&lt;/a&gt; section.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Shared_nothing_architecture&#34;&gt;Salesforce Architecture - How They Handle 1.3 Billion Transactions A Day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://codefutures.com/database-sharding/&#34;&gt;The Easy Way Of Building A Growing Startup Architecture Using HAProxy, PHP, Redis And MySQL To Handle 1 Billion Requests A Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ayende.com/blog/134145/sharding-vs-having-multiple-databases&#34;&gt;The Real News Is Not That Facebook Serves Up 1 Trillion Pages A Month…&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://labs.octivi.com/database-design-in-saas-platforms/&#34;&gt;Facebook&amp;rsquo;s New Real-Time Messaging System: HBase To Store 135+ Billion Messages A Month&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/4/23/facebook-secrets-of-web-performance.html&#34;&gt;Facebook Secrets Of Web Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/11/25/how-to-make-an-infinitely-scalable-relational-database-manag.html&#34;&gt;How To Make An Infinitely Scalable Relational Database Management System (RDBMS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://highscalability.com/blog/2014/7/21/stackoverflow-update-560m-pageviews-a-month-25-servers-and-i.html&#34;&gt;StackOverflow Update: 560M Pageviews A Month, 25 Servers, And It&amp;rsquo;s All About Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;nosql&#34;&gt;NoSQL&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/NoSQL&#34;&gt;http://en.wikipedia.org/wiki/NoSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://prestodb.io/&#34;&gt;http://prestodb.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aerospike.com/&#34;&gt;http://www.aerospike.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;netflix&#34;&gt;Netflix&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://techblog.netflix.com/2014/11/introducing-raigad-elasticsearch-sidecar.html&#34;&gt;Introducing Raigad - An Elasticsearch Sidecar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://techblog.netflix.com/2014/10/using-presto-in-our-big-data-platform.html&#34;&gt;Using Presto in our Big Data Platform on AWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;sharding&#34;&gt;Sharding&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Shard_%28database_architecture%29&#34;&gt;Shard (database architecture)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Shared_nothing_architecture&#34;&gt;Shared nothing architecture&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://codefutures.com/database-sharding/&#34;&gt;Database Sharding&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ayende.com/blog/134145/sharding-vs-having-multiple-databases&#34;&gt;Sharding vs. Having multiple databases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://labs.octivi.com/database-design-in-saas-platforms/&#34;&gt;Database design in SaaS platforms&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bigdatascalability.com/&#34;&gt;http://bigdatascalability.com/&lt;/a&gt; (book)&lt;/p&gt;

&lt;p&gt;Native distributed search example: &lt;a href=&#34;https://wiki.apache.org/solr/DistributedSearch&#34;&gt;https://wiki.apache.org/solr/DistributedSearch&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing efficient CSS</title>
      <link>https://titi.github.io/2014/09/writing-efficient-css/</link>
      <pubDate>Wed, 17 Sep 2014 10:58:00 +0100</pubDate>
      <author>thibault.rohmer@gmail.com (Thibault ROHMER)</author>
      <guid>https://titi.github.io/2014/09/writing-efficient-css/</guid>
      <description>&lt;p&gt;September 17, 2014 10:58am&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://code.tutsplus.com/tutorials/30-css-best-practices-for-beginners--net-6741&#34;&gt;30 CSS Best Practices for Beginners&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml&#34;&gt;Google HTML/CSS Style Guide&lt;/a&gt;&lt;br /&gt;
Great collection of short tips&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Writing_efficient_CSS&#34;&gt;Writing efficient CSS&lt;/a&gt; - Mozilla Developer Network [MDN]&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.creativebloq.com/how-structure-your-css-12114258&#34;&gt;How to structure your CSS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sitepoint.com/css-architectures-new-best-practices/&#34;&gt;CSS Architectures: New Best Practices&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;September 25, 2014 9:09am&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/100501790&#34; width=&#34;640&#34; height=&#34;385&#34; frameborder=&#34;0&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/99877232&#34; width=&#34;640&#34; height=&#34;385&#34; frameborder=&#34;0&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/100264064&#34; width=&#34;640&#34; height=&#34;385&#34; frameborder=&#34;0&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;February 4, 2015 9:40am&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://codeascraft.com/2015/02/02/transitioning-to-scss-at-scale/&#34;&gt;Transitioning to SCSS at Scale&lt;/a&gt; (Etsy)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/causes/scss-lint&#34;&gt;https://github.com/causes/scss-lint&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;February 9, 2015 9:15am&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tldr.huddle.com/blog/css-testing/&#34;&gt;CSS Regression Testing&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Mars 10, 2015 23:52pm&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://tech.bellycard.com/blog/sass-mixins-vs-extends-the-data/&#34;&gt;Sass Mixins vs Extends: The Data&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Mars 13, 2015 10:20am&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://cssguidelin.es/&#34;&gt;High-level advice and guidelines for writing sane, manageable, scalable CSS&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Software Testing Ice-cream Cone</title>
      <link>https://titi.github.io/2014/08/software-testing-ice-cream-cone/</link>
      <pubDate>Sun, 03 Aug 2014 10:17:00 +0100</pubDate>
      <author>thibault.rohmer@gmail.com (Thibault ROHMER)</author>
      <guid>https://titi.github.io/2014/08/software-testing-ice-cream-cone/</guid>
      <description>&lt;p&gt;What not to do:&lt;br /&gt;
&lt;img src=&#34;cone/ice-cream_cone.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;What we should do:&lt;br /&gt;
&lt;img src=&#34;cone/cone1.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://info.thoughtworks.com/putting-continuous-delivery-into-practice-slideshare.html&#34;&gt;Implementing Continuous Delivery&lt;/a&gt;&lt;br /&gt;
See Part 4: Automated Testing&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/nashjain/inverting-the-testing-pyramid&#34;&gt;Inverting The Testing Pyramid&lt;/a&gt; [SlideShare]
&amp;gt; &lt;a href=&#34;http://blogs.agilefaqs.com/2011/02/01/inverting-the-testing-pyramid/&#34;&gt;http://blogs.agilefaqs.com/2011/02/01/inverting-the-testing-pyramid/&lt;/a&gt; [Article]&lt;/p&gt;

&lt;p&gt;The article is more complete:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“most teams struggle automating their end-to-end tests early on, which results in huge amount of time spent in manual regression testing”&lt;/p&gt;

&lt;p&gt;“Number of end-to-end tests required to get a good coverage is much higher and more complex than the number of
 unit tests + selected end-to-end tests required”&lt;br /&gt;
               70 end-to-end tests&lt;br /&gt;
               vs&lt;br /&gt;
               61 unit tests + 8 end-to-end tests&lt;/p&gt;

&lt;p&gt;“Maintain a large number of end-to-end tests is quite a nightmare for teams.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Interesting analogy:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Imagine, an automobile company building an automobile without testing/checking the bolts, nuts all the way up to the engine, transmission,
 breaks, etc. And then just assembling the whole thing somehow and asking you to drive it. Would you test drive that automobile?”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&#34;cone/blind_commit.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;cone/break.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/Urbancode/package-repositories-the-unsung-heroes-of-configuration-and-release-management&#34;&gt;Package Repositories: The Unsung Heroes of Configuration and Release Management&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/Urbancode/scaling-continuous-integration-practices-to-teams-with-parallel-development&#34;&gt;Scaling Continuous Integration Practices to Teams with Parallel Development&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unit Testing</title>
      <link>https://titi.github.io/2014/07/unit-testing/</link>
      <pubDate>Tue, 15 Jul 2014 10:58:00 +0100</pubDate>
      <author>thibault.rohmer@gmail.com (Thibault ROHMER)</author>
      <guid>https://titi.github.io/2014/07/unit-testing/</guid>
      <description>&lt;p&gt;July 15, 2014 10:58am&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/nashjain/inverting-the-testing-pyramid&#34;&gt;Inverting The Testing Pyramid&lt;/a&gt; [SlideShare]
&amp;gt; &lt;a href=&#34;http://blogs.agilefaqs.com/2011/02/01/inverting-the-testing-pyramid/&#34;&gt;http://blogs.agilefaqs.com/2011/02/01/inverting-the-testing-pyramid/&lt;/a&gt; [Article]&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.javacodegeeks.com/2014/07/how-to-test-your-tests.html&#34;&gt;How To Test Your Tests&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://stephenwalther.com/archive/2009/04/11/tdd-tests-are-not-unit-tests&#34;&gt;TDD Tests are not Unit Tests&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.salesforce.com/page/How_to_Write_Good_Unit_Tests&#34;&gt;How to Write Good Unit Tests&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Single Responsibility Principle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.8thlight.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html&#34;&gt;http://blog.8thlight.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javacodegeeks.com/2014/02/the-single-responsibility-principle.html&#34;&gt;http://www.javacodegeeks.com/2014/02/the-single-responsibility-principle.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sklivvz.com/posts/i-dont-love-the-single-responsibility-principle&#34;&gt;I don&amp;rsquo;t love the single responsibility principle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://martinfowler.com/articles/testing-culture.html&#34;&gt;Goto Fail, Heartbleed, and Unit Testing Culture&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rodolfograve.blogspot.it/2014/03/are-unit-tests-waste.html&#34;&gt;Are unit tests waste?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://java.dzone.com/articles/see-always-told-you-testing&#34;&gt;See, always told you: testing is just a waste of time&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://java.dzone.com/articles/tdd-unit-tests-and-vice-versa&#34;&gt;TDD != Unit Tests (and Vice Versa)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ian Cooper: TDD, where did it all go wrong:
&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/68375232&#34; width=&#34;640&#34; height=&#34;385&#34; frameborder=&#34;0&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://martinfowler.com/articles/is-tdd-dead/&#34;&gt;Is TDD Dead?&lt;/a&gt; [article]&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; width=&#34;640&#34; height=&#34;385&#34; src=&#34;http://www.youtube.com/embed/z9quxZsLcfo&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;genericon genericon-audio&#34;&gt;&lt;/span&gt; &lt;a href=&#34;http://www.hanselman.com/blog/HanselminutesPodcast146TestDrivenDevelopmentIsDesignTheLastWordOnTDD.aspx&#34;&gt;Hanselminutes Podcast 146 - Test Driven Development is Design - The Last Word on TDD&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Javascript only:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qunitjs.com/&#34;&gt;QUnit: A JavaScript Unit Testing framework&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blanketjs.org/&#34;&gt;blanket.js - Seamless javascript code coverage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tntim96.github.io/JSCover/&#34;&gt;JSCover - JavaScript code coverage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Cobertura+Plugin&#34;&gt;Cobertura Plugin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/pivotal/jasmine&#34;&gt;Jasmine, A JavaScript Testing Framework&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gotwarlost.github.io/istanbul/&#34;&gt;istanbul: A Javascript code coverage tool written in JS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://phantomjs.org/&#34;&gt;PhantomJS, Headless Website Testing&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jonkemp/qunit-phantomjs-runner&#34;&gt;https://github.com/jonkemp/qunit-phantomjs-runner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/smurfy/qunit-multi-runner&#34;&gt;https://github.com/smurfy/qunit-multi-runner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://casperjs.org/&#34;&gt;CasperJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://code.tutsplus.com/tutorials/testing-in-node-js--net-35018&#34;&gt;Testing in Node.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jstest.jcoglan.com/&#34;&gt;jstest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/es-analysis/plato&#34;&gt;Plato&lt;/a&gt;&lt;br /&gt;
Complexity explanation: &lt;a href=&#34;https://github.com/philbooth/complexity-report/issues/30&#34;&gt;https://github.com/philbooth/complexity-report/issues/30&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.elijahmanor.com/control-the-complexity-of-your-javascript-functions-with-jshint/&#34;&gt;Control the Complexity of Your JavaScript Functions with JSHint&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;July 15, 2014 1:47pm&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rmurphey.com/blog/2014/07/13/unit-tests/&#34;&gt;Writing Unit Tests for Existing JavaScript&lt;/a&gt; - Rebecca Murphey (jQuery, &amp;hellip;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/3476054/can-unit-testing-be-successfully-added-into-an-existing-production-project-if-s&#34;&gt;On adding unit tests to existing code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://programmers.stackexchange.com/questions/207401/writing-tests-for-existing-code&#34;&gt;On whether it’s worth the effort&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/gp/product/0131177052&#34;&gt;Working Effectively with Legacy Code&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;November 10, 2014 4:17pm&lt;/p&gt;

&lt;p&gt;Unit Tests &amp;amp; Integration tests:
&lt;a href=&#34;http://blog.stevensanderson.com/2009/08/24/writing-great-unit-tests-best-and-worst-practises/&#34;&gt;Writing Great Unit Tests: Best and Worst Practices&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;November 17, 2014 6:14pm&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; width=&#34;640&#34; height=&#34;385&#34; src=&#34;http://www.youtube.com/embed/Y8YVSohnlgY&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;First 20 minutes are really interesting. He talks about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;code legacy&lt;/li&gt;
&lt;li&gt;unit vs integration&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>The javascript .prototype guide I would have wanted</title>
      <link>https://titi.github.io/2013/12/prototype/</link>
      <pubDate>Tue, 17 Dec 2013 00:19:38 +0100</pubDate>
      <author>thibault.rohmer@gmail.com (Thibault ROHMER)</author>
      <guid>https://titi.github.io/2013/12/prototype/</guid>
      <description>&lt;iframe id=&#34;prototypeFrame&#34; width=&#34;100%&#34; height=&#34;800&#34; style=&#34;border:0;&#34; src=&#34;prototypes/index.html&#34;&gt;&lt;/iframe&gt;

&lt;script&gt;
&lt;!--
// So that keyboard arrows immediately work
prototypeFrame.focus();
--&gt;
&lt;/script&gt;
</description>
    </item>
    
  </channel>
</rss>